version: '3'
services:
  mysql:
    image: mysql:8.0
    container_name: db-back
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - 33063:3306
    environment:
      - MYSQL_ROOT_PASSWORD=c@r123
      - MYSQL_DATABASE=car-user-system
    volumes:
      - db-car-user-system:/var/lib/mysql
    networks:
      - backend

  eureka-server:
    build: ./car-user-system/discovery
    ports:
      - 8081:8080
    networks:
      - backend
    environment:
      eureka.instance.hostname: eureka-server
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8081/eureka/

  gateway:
    build: ./car-user-system/gateway
    ports:
      - 8080:8080
    networks:
      - backend
    depends_on:
      - eureka-server
    environment:
      server.port: 8080
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8081/eureka/

  auth:
    build: ./car-user-system/auth
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db-back:3306/car-user-system
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: c@r123
      server.port: 8083
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8081/eureka/
    ports:
      - 8083:8080
    depends_on:
      - mysql
    networks:
      - backend

  back-end:
    build: ./car-user-system/back-end
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db-back:3306/car-user-system
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: c@r123
      server.port: 8082
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8081/eureka/
    ports:
      - 8082:8080
    depends_on:
      - mysql
    networks:
      - backend

  frontend:
    build: ./front-car-user-system/.
    ports:
      - '80:80'
    networks:
      - frontend

  #jenkins:
  #  build: ./jenkins
  #  ports:
  #    - '8089:8080'
  #    - '50009:50000'
  #  volumes:
  #    - jenkins-home:/var/jenkins_home
  #    - /var/run/docker.sock:/var/run/docker.sock
  #  networks:
  #    - backend

  #sonarqube:
  #  build: ./sonarqube
  #  ports:
  #    - '9001:9000'
  #  networks:
  #    - backend

networks:
  backend:
  frontend:

volumes:
  db-car-user-system:
  #jenkins-home:
